@font-face {
    font-family: 'Pretendard-Regular';
    src: url('https://fastly.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
  }

* {
    font-family: 'Pretendard-Regular';
}

body {
    background-image: url(image/background.jpg);
    background-size : cover;
    height: 100vh;
    width: 100%;
    position: relative;
}
.announcement:hover {
    color: yellow;
    cursor: pointer;
}

.game {
    margin-left:-52px;
}

.game:hover {
    animation: hoverwiggle ease-in 2s;
}

@keyframes hoverwiggle {
    0% {
        transform: rotate(0deg);
    }
    25% {
        transform: rotate(-5deg);
    }
    75% {
        transform: rotate(5deg);
    }
    100% {
        transform: rotate(0deg);
    }
}
.games {
    color:violet;
}

li:hover {
    animation: liwiggle ease-in 2s;
    color: aqua;
    cursor: pointer;
    text-shadow: 10px 10px 15px black;
}

@keyframes liwiggle {
    0% {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(2deg);
    }
    100% {
        transform: rotate(0deg);
    }
}
/* 에펙에서 사용되는 null처럼 사용하려고 만든  sticky div Start  */
.sticky {
    /* sticky 사용시 스크롤하면 잘려보이는데 높이차이가 있어 그렇기 때문에 height값을 주면 잘림이 없이 사용할 수 있다. */
    width: 0px; /* inline 블럭으로 변경해서 오른쪽에 post가 위치할 수 있지만 해당 div 때문에 우측으로 밀리므로 px 조절을 통해 좌측으로 post를 땡겨줄 수 있는 기능 */
    height: 500px; /*sticky가 어디까지 내려오게할 지 정할 수 있음 - 사이드바에 대한 sticky */
    position: sticky;
    top:0px;
    bottom:0px;
    left:0px;
    right:0px;
    display: inline-block;
    z-index:1; /* 여기서 z-index를 준 이유 : width를 0으로 하고 inline-block을 사용해서 우측에 있던 allpost block이 inline-block으로 들어왔으나 그 안에 있는 틀을 잡는 posthalf에 있는 내부 block 요소가 해당 공간을 덮으면서
    사이드 바를 누를 수 없는 상황이 발생하여 z-index를 1을 주고 posthalf에 z-index:0을 줘서 사이드바가 더 앞에 있도록 설정하였다. */
}
.sticky2 {
    /* sticky 사용시 스크롤하면 잘려보이는데 높이차이가 있어 그렇기 때문에 height값을 주면 잘림이 없이 사용할 수 있다. */
    width: 0px; /* 에펙에서 사용되는 null처럼 사용되고 있는 sticky div  */
    height: 1525px; /* sticky 조정 - post글에 대한 sticky */
    position: sticky;
    top:0px;
    bottom:0px;
    left:0px;
    right:0px;
    display: inline-block;
}
/* sticky div End  */

.leftmain {
    width : 397px;
    height : 1750px;
    float:left;
    background-color: rgba(151, 182, 221, 0.5);
    /* 내부(상하좌우)를 중앙정렬하는 좋은 세트 3가지 // 가장 부모 영역에 설정 */
    display: flex;
    justify-content: center;
    align-items: center;
    position:absolute;
    border-radius: 25px;
    top:0px;
}

.sidebar {
    background-color: #3760C9;
    width :358px;
    height : 1750px;
    float:left;
    background-color: rgba(103, 159, 231, 0.5);
    border-radius: 50px;
}

#blossom {
    border-radius: 50px;
    width:358px;
    height:110px;
}

#pearly {
    width : 100%;
    transform: translateY(-180px);
    cursor:pointer;
}

.profile {
    transform : translateY(-375px);
    width : 200px;
    border-radius: 9999px;
    z-index : 1; /* 이건 약간 어떤게 더 앞으로 오고 어떤게 더 뒤로가는 순서를 정하는 것 같다. */
    position: absolute;
    cursor: pointer;
}

#welcome {
    margin-top: -1000px;
    transform : translateY(-15px);
    position : absolute;
    font-size : 30px;
    font-weight: 700;
    text-decoration: underline;
}

.visit {
    text-align: center;
    color :white;
    transform : translateY(-350px);
    position : absolute;
    background-color: rgba(79, 146, 122, 0.5);
    width : 300px;
    height : 250px;
    border-radius: 50px;
}

#category {
    background-color: rgba(103, 159, 231, 0.75);
    width : 335px;
    height : 1000px;
    border-radius: 50px;
    transform : translateY(300px);
    position:absolute;
    border: 2px solid rgb(90, 111, 182);
}

li {
    list-style-type:none;
    font-weight: 700;
    line-height: 35px;
}

/* 눈 내려요 */
.snow {
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 50%;
    box-shadow: 0 0 15px 5px white;
    z-index: 1;
  }
/* 끝 */

.footer {
    /* 가장 하단으로 내리는 명령어 두가지인데 이상하게 더 내려가지 않았다. */
    position: absolute; /* flex는 사용하면 스크롤이 많아지면 문제가 생긴다. */
    /* /* margin-top:1650px; */
    margin-left : 397px;
    font-size : 20px;
    font-weight: 400;
    text-align: center;
    color:white;
    text-shadow : 15px 15px 25px black;
    width : 1485px;
    height: 100px;
    border: 5px solid rgba(109, 222, 241, 0.7);
    border-radius: 15px;
    bottom: -1250px;
    display: flex;
    justify-content: center;
    align-items: center;
    position:absolute;
    border-radius: 25px;
    line-height: 25px;
    /* 다른 명령어 추가로 푸터자리로 맞춤 */
}

/* 플로팅 버튼 */

.float-button-container {
	z-index: 1000;
	position: fixed;
	transform: translate(-50%, 0%);
	left: 97.5%;
	bottom: 30px;

	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;

	height: 40px;
	border-radius: 9999px;
	text-decoration: none !important;
}

.float-button {
	display: flex;
	align-items: center;
	width: 70px;
    height : 70px;
    border-radius: 9999px;
	cursor: pointer;
}

.float-button:hover {
	animation : wiggle 2s;
}
  @keyframes wiggle {
    0% {
      transform: translate(0%, 0%) rotate(0);
    }
    
    25% {
      transform: translate(0%, -20%) rotate(-5deg);
    }
  
    75% {
      transform: translate(0%, -20%) rotate(5deg);
      
    }
    
    100% {
      transform: translate(0%, 0%) rotate(0);
    }
  }

  /* 각 버튼 이미지를 나누었다. 그냥하려고 했으나 이미지가 조금씩 눌려보여서 조정을 위해 나눔 */
.float_button_image {
    width: 50px;
	height: 60px;
    transform: translateX(2px); 
}

.float_button_image2 {
    width: 300px;
	height: 75px;
    transform: translateX(-9.5px); 
}

.float_button_image3 {
    width: 50px;
	height: 50px;
    transform: translateX(2px); 
}

.float_button_image4 {
    width: 100px;
	height: 50px;
}

.float_button_image5 {
    width: 100px;
	height: 65px;
    transform: translateX(-5px); 
}
/* hello라는 온클릭 이벤트 생성 및 세부 설정 - 자바스크립트로 온클릭을 만든 상태에서 행함
    직접 만들었다.
*/
.hello {
    transform :translateY(-90px);
    animation : ease buttonfadein 1s;
    animation-fill-mode: forwards;
}
.hello2 {
    transform :translateY(-180px);
    animation : ease buttonfadein 1s;
    animation-fill-mode: forwards;
}
.hello3 {
    transform :translateY(-270px);
    animation : ease buttonfadein 1s;
    animation-fill-mode: forwards;
}
.hello4 {
    transform :translateY(-360px);
    animation : ease buttonfadein 1s;
    animation-fill-mode: forwards;
}

@keyframes buttonfadein {
    0% {
        opacity : 0%;
    }

    100% {
        opacity : 100%;
    }
}
.float-button-container2 {
	z-index: 990;
	position: fixed;
	left: 95.65%;
	bottom: 15px;
    opacity : 0%;
}
.float-button-container3 {
	z-index: 990;
	position: fixed;
	left: 95.65%;
	bottom: 15px;
    opacity : 0%;
}
.float-button-container4 {
	z-index: 990;
	position: fixed;
	left: 95.65%;
	bottom: 15px;
    opacity : 0%;
}
.float-button-container5 {
	z-index: 990;
	position: fixed;
	left: 95.65%;
	bottom: 15px;
    opacity : 0%;
}

/* post 시작 */
.postall { /* 전체적인 여백을 완성하고 마지막으로 넣어준 값으로 빈 공간까지 따라오게 하는 세트 */
    position:sticky;
    top:0px;
    bottom:0px;
    left:0px;
    right:0px;
}

.post {
    width: 400px;
    height: 400px;
    border-radius: 70px;
    background-color: #97B6DD;
    transform: translate(115%, 10%);
    cursor:pointer;
}

#post1 {
    float:left;
}
#post2 {
    float :left;
    margin-left:70px;
}
#post3 {
    display: inline-block;
    margin-left:70px;
}
#post4 {
    float:left;
}
#post5 {
    float:left;
    margin-left:70px;
}
#post6 {
    float:left;
    margin-left:70px;
}
.posthalf {
    margin-top:70px;
    width : 1700px;
    z-index:0;
    /* 여기서 z-index를 준 이유 : width를 0으로 하고 inline-block을 사용해서 우측에 있던 allpost block이 inline-block으로 들어왔으나 그 안에 있는 틀을 잡는 posthalf에 있는 내부 block 요소가 해당 공간을 덮으면서
    사이드 바를 누를 수 없는 상황이 발생하여 z-index를 1을 주고 posthalf에 z-index:0을 줘서 사이드바가 더 앞에 있도록 설정하였다. */
}
.posthalf2 {
    margin-top : 70px;
    width : 1700px;
    z-index:0; /* 크롬으로 검사했을 때 이 부분은 겹치는 부분이 아니지만 문재 발생 여지가 있을 수 있으므로 똑같이 0으로 주었다. 따라서 사이드바(z-index:1;)가 더 우선순위로 올라간다. */
}

/* 프로그레스바 시작 */
#mybar { 
    position: fixed;
    top: 0;
    left: 0;
    width: 0;
    height: 7px; /* 프로그레스 바 굵기 */
    z-index: 9999;
    transition: all .1.5s ease;
    background: linear-gradient(100deg, #b6aaff, #b9fff0); /* 프로그레스 바 그라데이션 색상 */
  }
  /* 프로그레스바 시작 끝 */

  /* 마지막 로딩 */
.loading {
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	position: fixed;
	display: flex;
	background: rgb(255, 255, 255);
	z-index: 999;
	opacity: 0.7;
    animation: gifadeout ease-in 3s;
    animation-fill-mode: forwards;
    z-index:0;
}
.loading > img {
	display: flex;
	width: fit-content;
	height: fit-content;
	margin: auto;
	box-shadow: none;
}

@keyframes gifadeout {
    0% {
        opacity : 0.7
    }
    100% {
        opacity : 0
    }
};